{"ast":null,"code":"class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  async getResource(url) {\n    const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"Could not fetch \".concat(url) + \", received \".concat(res.status));\n    }\n\n    return await res.json();\n  }\n\n  async getAllPeople() {\n    const res = await this.getResource(\"/people/\");\n    return res.results;\n  }\n\n  getPerson(id) {\n    return this.getResource(\"/people/\".concat(id, \"/\"));\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResource(\"/planets/\");\n    return res.results;\n  }\n\n  getPlanet(id) {\n    return this.getResource(\"/planets/\".concat(id, \"/\"));\n  }\n\n  async getAllStarships() {\n    const res = await this.getResource(\"/starships/\");\n    return res.results;\n  }\n\n  getStarship(id) {\n    return this.getResource(\"/starships/\".concat(id, \"/\"));\n  }\n\n}\n\nconst swapi = new SwapiService();\nswapi.getPerson(3).then(p => {\n  console.log(p.name);\n});","map":{"version":3,"sources":["/Users/r.v.mosolov/Desktop/star-db/src/index.js"],"names":["SwapiService","_apiBase","getResource","url","res","fetch","ok","Error","status","json","getAllPeople","results","getPerson","id","getAllPlanets","getPlanet","getAllStarships","getStarship","swapi","then","p","console","log","name"],"mappings":"AAAA,MAAMA,YAAN,CAAmB;AAAA;AAAA,SAEfC,QAFe,GAEJ,sBAFI;AAAA;;AAIf,QAAMC,WAAN,CAAkBC,GAAlB,EAAuB;AACnB,UAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAKJ,QAAT,SAAoBE,GAApB,EAAvB;;AAEA,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,YAAM,IAAIC,KAAJ,CAAU,0BAAmBJ,GAAnB,yBAAyCC,GAAG,CAACI,MAA7C,CAAV,CAAN;AACH;;AAED,WAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACH;;AAED,QAAMC,YAAN,GAAqB;AACjB,UAAMN,GAAG,GAAG,MAAM,KAAKF,WAAL,YAAlB;AACA,WAAOE,GAAG,CAACO,OAAX;AACH;;AAEDC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACV,WAAO,KAAKX,WAAL,mBAA4BW,EAA5B,OAAP;AACH;;AAGD,QAAMC,aAAN,GAAsB;AAClB,UAAMV,GAAG,GAAG,MAAM,KAAKF,WAAL,aAAlB;AACA,WAAOE,GAAG,CAACO,OAAX;AACH;;AAEDI,EAAAA,SAAS,CAACF,EAAD,EAAK;AACV,WAAO,KAAKX,WAAL,oBAA6BW,EAA7B,OAAP;AACH;;AAGD,QAAMG,eAAN,GAAwB;AACpB,UAAMZ,GAAG,GAAG,MAAM,KAAKF,WAAL,eAAlB;AACA,WAAOE,GAAG,CAACO,OAAX;AACH;;AAEDM,EAAAA,WAAW,CAACJ,EAAD,EAAK;AACZ,WAAO,KAAKX,WAAL,sBAA+BW,EAA/B,OAAP;AACH;;AAzCc;;AA4CnB,MAAMK,KAAK,GAAG,IAAIlB,YAAJ,EAAd;AAEAkB,KAAK,CAACN,SAAN,CAAgB,CAAhB,EAAmBO,IAAnB,CAAyBC,CAAD,IAAO;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAd;AACH,CAFD","sourcesContent":["class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` + `, received ${res.status}`)\n        }\n\n        return await res.json();\n    }\n\n    async getAllPeople() {\n        const res = await this.getResource(`/people/`);\n        return res.results;\n    }\n\n    getPerson(id) {\n        return this.getResource(`/people/${id}/`);\n    }\n\n\n    async getAllPlanets() {\n        const res = await this.getResource(`/planets/`);\n        return res.results;\n    }\n\n    getPlanet(id) {\n        return this.getResource(`/planets/${id}/`);\n    }\n\n\n    async getAllStarships() {\n        const res = await this.getResource(`/starships/`);\n        return res.results;\n    }\n\n    getStarship(id) {\n        return this.getResource(`/starships/${id}/`);\n    }\n}\n\nconst swapi = new SwapiService();\n\nswapi.getPerson(3).then((p) => {\n    console.log(p.name);\n});"]},"metadata":{},"sourceType":"module"}