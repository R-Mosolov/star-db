{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n\n    this._extractId = item => {\n      const idRegExp = /\\/([0-9]*)\\/$/;\n      return item.url.match(idRegExp)[1];\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.costInCredits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargoCapacity\n      };\n    };\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birth_year,\n        eyeColor: person.eye_color\n      };\n    };\n  }\n\n  async getResource(url) {\n    const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"Could not fetch \".concat(url) + \", received \".concat(res.status));\n    }\n\n    return await res.json();\n  }\n\n  async getAllPerson() {\n    const res = await this.getResource(\"/people/\");\n    return res.results.map(this._transformPerson);\n  }\n\n  async getPerson(id) {\n    const person = await this.getResource(\"/people/\".concat(id, \"/\"));\n    return this._transformPerson(person);\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResource(\"/planets/\");\n    return res.results.map(this._transformPlanet);\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResource(\"/planets/\".concat(id, \"/\"));\n    return this._transformPlanet(planet);\n  }\n\n  async getAllStarships() {\n    const res = await this.getResource(\"/starships/\");\n    return res.results.map(this._transformStarship);\n  }\n\n  async getStarship(id) {\n    const starship = await this.getResource(\"/starships/\".concat(id, \"/\"));\n    return this._transformStarship(starship);\n  }\n\n}\nconst swapi = new SwapiService();","map":{"version":3,"sources":["/Users/r.v.mosolov/Desktop/star-db/src/services/swapi-service.js"],"names":["SwapiService","_apiBase","_extractId","item","idRegExp","url","match","_transformPlanet","planet","id","name","population","rotationPeriod","rotation_period","diameter","_transformStarship","starship","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","_transformPerson","person","gender","birthYear","birth_year","eyeColor","eye_color","getResource","res","fetch","ok","Error","status","json","getAllPerson","results","map","getPerson","getAllPlanets","getPlanet","getAllStarships","getStarship","swapi"],"mappings":"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","sourcesContent":["export default class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` + `, received ${res.status}`)\n        }\n\n        return await res.json();\n    }\n\n    async getAllPerson() {\n        const res = await this.getResource(`/people/`);\n        return res.results.map(this._transformPerson);\n    }\n\n    async getPerson(id) {\n        const person = await this.getResource(`/people/${id}/`);\n        return this._transformPerson(person);\n    }\n\n\n    async getAllPlanets() {\n        const res = await this.getResource(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    }\n\n    async getPlanet(id) {\n        const planet = await this.getResource(`/planets/${id}/`);\n        return this._transformPlanet(planet);\n    }\n\n\n    async getAllStarships() {\n        const res = await this.getResource(`/starships/`);\n        return res.results.map(this._transformStarship);\n    }\n\n    async getStarship(id) {\n        const starship = await this.getResource(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    }\n\n\n    _extractId = (item) => {\n        const idRegExp = /\\/([0-9]*)\\/$/;\n        return item.url.match(idRegExp)[1];\n    };\n\n    _transformPlanet = (planet) => {\n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        };\n    };\n\n    _transformStarship = (starship) => {\n        return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.costInCredits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargoCapacity\n        };\n    };\n\n    _transformPerson = (person) => {\n        return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birth_year,\n            eyeColor: person.eye_color\n        };\n    };\n}\n\nconst swapi = new SwapiService();"]},"metadata":{},"sourceType":"module"}