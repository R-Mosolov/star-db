{"ast":null,"code":"var _jsxFileName = \"/Users/r.v.mosolov/Desktop/star-db/src/components/random-planet/random-planet.js\";\nimport React, { Component, Fragment } from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport './random-planet.css';\nimport Spinner from '../spinner';\nexport default class RandomPlanet extends Component {\n  constructor() {\n    super();\n    this.swapiService = new SwapiService();\n    this.state = {\n      planet: {},\n      loading: true\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        loading: false,\n        error: false\n      });\n    };\n\n    this.onError = () => {};\n\n    this.updatePlanet();\n  }\n\n  updatePlanet() {\n    const id = 12;\n    this.swapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\n  }\n\n  render() {\n    const _this$state = this.state,\n          planet = _this$state.planet,\n          loading = _this$state.loading;\n    const spinner = loading ? React.createElement(\"div\", {\n      className: \"d-flex align-items-center m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })) : null;\n    const content = !loading ? React.createElement(PlanetView, {\n      planet: planet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"nav\", {\n      className: \"random-planet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, spinner, content)));\n  }\n\n}\n;\n\nconst PlanetView = ({\n  planet\n}) => {\n  const id = planet.id,\n        name = planet.name,\n        population = planet.population,\n        rotationPeriod = planet.rotationPeriod,\n        diameter = planet.diameter;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"card-img m-3 rounded-lg\",\n    alt: \"Planet Image\",\n    src: \"https://starwars-visualguide.com/assets/img/planets/\".concat(id, \".jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, name), React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Population\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, population)), React.createElement(\"tr\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Rotation Period\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, rotationPeriod)), React.createElement(\"tr\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Diameter\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, diameter))))));\n};","map":{"version":3,"sources":["/Users/r.v.mosolov/Desktop/star-db/src/components/random-planet/random-planet.js"],"names":["React","Component","Fragment","SwapiService","Spinner","RandomPlanet","constructor","swapiService","state","planet","loading","onPlanetLoaded","setState","error","onError","updatePlanet","id","getPlanet","then","catch","render","spinner","content","PlanetView","name","population","rotationPeriod","diameter"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\n\nimport SwapiService from '../../services/swapi-service';\n\nimport './random-planet.css';\nimport Spinner from '../spinner';\n\nexport default class RandomPlanet extends Component {\n\n    swapiService = new SwapiService();\n\n    state = {\n        planet: {},\n        loading: true\n    };\n\n    constructor() {\n        super();\n        this.updatePlanet();\n    }\n\n    onPlanetLoaded = (planet) => {\n        this.setState({\n            planet,\n            loading: false,\n            error: false\n        })\n    };\n\n    onError = () => {\n\n    };\n\n    updatePlanet() {\n        const id = 12;\n        this.swapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\n    };\n\n    render() {\n\n        const { planet, loading } = this.state;\n        const spinner = loading ? <div className=\"d-flex align-items-center m-auto\"><Spinner/></div> : null;\n        const content = !loading ? <PlanetView planet={planet}/> : null;\n\n        return (\n            <nav className=\"random-planet\">\n                <div className=\"card\">\n                    <div className=\"d-flex\">\n                        {spinner}\n                        {content}\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n};\n\nconst PlanetView = ({ planet }) => {\n\n    const { id, name, population, rotationPeriod, diameter } = planet;\n\n    return (\n        <Fragment>\n            <div>\n                <img className=\"card-img m-3 rounded-lg\"\n                     alt=\"Planet Image\"\n                     src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>\n            </div>\n            <div className=\"d-flex align-items-center\">\n                <div>\n                    <h2>{name}</h2>\n                    <table className=\"table\">\n                        <tr className=\"d-flex\">\n                            <th className=\"w-100\">Population</th>\n                            <td>{population}</td>\n                        </tr>\n                        <tr className=\"d-flex\">\n                            <th className=\"w-100\">Rotation Period</th>\n                            <td>{rotationPeriod}</td>\n                        </tr>\n                        <tr className=\"d-flex\">\n                            <th className=\"w-100\">Diameter</th>\n                            <td>{diameter}</td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </Fragment>\n    )\n};"]},"metadata":{},"sourceType":"module"}