{"version":3,"sources":["components/error-indicator/death-star.svg","services/swapi-service.js","components/header/index.js","components/header/header.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/item-list/index.js","components/item-list/item-list.js","components/item-list-planet/index.js","components/item-list-planet/item-list-planet.js","components/error-button/index.js","components/error-button/error-button.js","components/person-details/index.js","components/person-details/person-details.js","components/planet-details/index.js","components/planet-details/planet-details.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","SwapiService","_apiBase","_extractId","item","url","match","_transformPlanet","planet","id","_this","name","population","rotationPeriod","rotation_period","diameter","_transformStarship","starship","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","_transformPerson","person","gender","birthYear","birth_year","eyeColor","eye_color","fetch","concat","this","res","ok","Error","status","json","getResource","results","map","Header","react_default","a","createElement","className","href","Spinner","ErrorIndicator","src","icon","alt","RandomPlanet","swapiService","state","loading","onPlanetLoaded","setState","error","onError","updatePlanet","Math","floor","random","getPlanet","then","catch","interval","setInterval","clearInterval","_this$state","hasData","errorMessage","components_error_indicator","spinner","components_spinner","content","random_planet_PlanetView","Component","PlanetView","_ref","react","ItemList","personList","_this2","getAllPerson","arr","_this3","key","onClick","props","onItemSelected","items","renderItems","ItemListPlanet","planetList","getAllPlanets","ErrorButton","renderError","console","log","foo","bar","PersonDetails","hasError","updatePerson","prevProps","personId","errorInfo","getPerson","_this$state$person","components_error_button","PlanetDetails","planetId","_this$state$planet","App","selectedPerson","selectedPlanet","onPersonSelected","onPlanetSelected","components_header","components_random_planet","components_item_list","components_person_details","components_item_list_planet","components_planet_details","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.a8e1dff2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/death-star.28fc51ff.svg\";","export default class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, received ${res.status}`)\n        }\n\n        return await res.json();\n    }\n\n    async getAllPerson() {\n        const res = await this.getResource(`/people/`);\n        return res.results.map(this._transformPerson);\n    }\n\n    async getPerson(id) {\n        const person = await this.getResource(`/people/${id}/`);\n        return this._transformPerson(person);\n    }\n\n    async getAllPlanets() {\n        const res = await this.getResource(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    }\n\n    async getPlanet(id) {\n        const planet = await this.getResource(`/planets/${id}/`);\n        return this._transformPlanet(planet);\n    }\n\n    async getAllStarships() {\n        const res = await this.getResource(`/starships/`);\n        return res.results.map(this._transformStarship);\n    }\n\n    async getStarship(id) {\n        const starship = await this.getResource(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    }\n\n    _extractId = (item) => {\n        const idRegExp = /\\/([0-9]*)\\/$/;\n        return item.url.match(idRegExp)[1];\n    };\n\n    _transformPlanet = (planet) => {\n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        };\n    };\n\n    _transformStarship = (starship) => {\n        return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.costInCredits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargoCapacity\n        };\n    };\n\n    _transformPerson = (person) => {\n        return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birth_year,\n            eyeColor: person.eye_color\n        };\n    };\n}","import Header from './header';\n\nexport default Header;","import React from 'react';\n\nimport './header.css';\n\nconst Header = () => {\n    return (\n        <nav className=\"header d-flex justify-content-between\">\n            <div>\n                <h1>Star DB</h1>\n            </div>\n            <div className=\"d-flex align-items-center\">\n                <a href=\"/\">People</a>\n                <a className=\"ml-5\" href=\"/\">Planets</a>\n                <a className=\"ml-5\" href=\"/\">Starship</a>\n            </div>\n        </nav>\n    )\n};\n\nexport default Header;","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\n\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-css ng-scope\">\n            <div className=\"lds-double-ring\">\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )\n};\n\nexport default Spinner;","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;","import React from 'react';\n\nimport './error-indicator.css';\nimport icon from './death-star.svg';\n\nconst ErrorIndicator = () => {\n    return (\n        <div className=\"error-indicator\">\n            <div>\n                <img src={icon} alt=\"Error Icon\"/><br/>\n                <span className=\"boom text-warning text-uppercase\">Boom!</span><br/>\n                <span className=\"text-warning\">\n                    something has gone terribly wrang\n                </span><br/>\n                <span className=\"text-warning\">\n                    (but we already sent our droids to fix it)\n                </span>\n            </div>\n        </div>\n    )\n};\n\nexport default ErrorIndicator;","import React, {Component, Fragment} from 'react';\n\nimport SwapiService from '../../services/swapi-service';\n\nimport './random-planet.css';\nimport Spinner from '../spinner';\nimport ErrorIndicator from \"../error-indicator\";\n\nexport default class RandomPlanet extends Component {\n\n    swapiService = new SwapiService();\n\n    state = {\n        planet: {},\n        loading: true\n    };\n\n    componentDidMount() {\n        this.updatePlanet();\n        this.interval = setInterval(this.updatePlanet, 5000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    onPlanetLoaded = (planet) => {\n        this.setState({\n            planet,\n            loading: false,\n            error: false\n        })\n    };\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        });\n    };\n\n    updatePlanet = () => {\n        const id = Math.floor(Math.random() * 12) + 3;\n        this.swapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\n    };\n\n    render() {\n        const { planet, loading, error } = this.state;\n\n        const hasData = !(loading || error);\n\n        const errorMessage = error ? <ErrorIndicator/> : null;\n        const spinner = loading ? <div className=\"d-flex align-items-center m-auto\"><Spinner/></div> : null;\n        const content = hasData ? <PlanetView planet={planet}/> : null;\n\n        return (\n            <nav className=\"random-planet\">\n                <div className=\"card\">\n                    <div className=\"d-flex\">\n                        {errorMessage}\n                        {spinner}\n                        {content}\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n};\n\nconst PlanetView = ({ planet }) => {\n\n    const { id, name, population, rotationPeriod, diameter } = planet;\n\n    return (\n        <Fragment>\n            <div>\n                <img className=\"card-img m-3 rounded-lg\"\n                     alt=\"Planet from Star Wars\"\n                     src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>\n            </div>\n            <div className=\"d-flex align-items-center\">\n                <div>\n                    <h3>{name}</h3>\n                    <ul className=\"list-group\">\n                        <li className=\"list-group-item\">\n                            <span className=\"mr-2\">Population:</span>\n                            <span>{population}</span>\n                        </li>\n                        <li className=\"list-group-item\">\n                            <span className=\"mr-2\">Rotation Period:</span>\n                            <span>{rotationPeriod}</span>\n                        </li>\n                        <li className=\"list-group-item\">\n                            <span className=\"mr-2\">Diameter:</span>\n                            <span>{diameter}</span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </Fragment>\n    )\n};","import RandomPlanet from './random-planet';\n\nexport default RandomPlanet;","import ItemList from './item-list';\n\nexport default ItemList;","import React, { Component } from 'react';\n\nimport './item-list.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport Spinner from \"../spinner\";\n\nexport default class ItemList extends Component {\n\n    swapiService = new SwapiService();\n\n    state = {\n        personList: null\n    };\n\n    componentDidMount() {\n        this.swapiService\n            .getAllPerson()\n            .then((personList) => {\n                this.setState({\n                    personList\n                });\n            });\n    }\n\n    renderItems(arr) {\n        return arr.map(({id, name}) => {\n            return (\n                <li className=\"list-group-item\"\n                    key={id}\n                    onClick={() => this.props.onItemSelected(id)}>\n                    {name}\n                </li>\n            );\n        });\n    }\n\n    render() {\n\n        const { personList } = this.state;\n\n        if (!personList) {\n            return <Spinner/>;\n        }\n\n        const items = this.renderItems(personList);\n\n        return (\n            <div className=\"item-list mt-3 w-100\">\n                {items}\n            </div>\n        )\n    }\n};","import ItemListPlanet from './item-list-planet';\n\nexport default ItemListPlanet;","import React, { Component } from 'react';\n\nimport './item-list-planet.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport Spinner from \"../spinner\";\n\nexport default class ItemListPlanet extends Component {\n\n    swapiService = new SwapiService();\n\n    state = {\n        planetList: null\n    };\n\n    componentDidMount() {\n        this.swapiService\n            .getAllPlanets()\n            .then((planetList) => {\n                this.setState({\n                    planetList\n                });\n            });\n    }\n\n    renderItems(arr) {\n        return arr.map(({id, name}) => {\n            return (\n                <li className=\"list-group-item\"\n                    key={id}\n                    onClick={() => this.props.onItemSelected(id)}>\n                    {name}\n                </li>\n            );\n        });\n    }\n\n    render() {\n\n        const { planetList } = this.state;\n\n        if (!planetList) {\n            return <Spinner/>;\n        }\n\n        const items = this.renderItems(planetList);\n\n        return (\n            <div className=\"item-list mt-3 w-100\">\n                {items}\n            </div>\n        )\n    }\n};","import ErrorButton from './error-button';\n\nexport default ErrorButton;","import React, { Component } from 'react';\n\nimport './error-button.css';\n\nexport default class ErrorButton extends Component {\n\n    state = {\n        renderError: false\n    };\n\n    render() {\n\n        console.log('render');\n        if (this.state.renderError) {\n            this.foo.bar = 0;\n        }\n\n        return (\n            <button\n                className=\"error-button btn btn-danger btn-lg mt-3\"\n                onClick={() => this.setState({renderError: true})}>\n                Throw Error\n            </button>\n        )\n    }\n};","import PersonDetails from './person-details';\n\nexport default PersonDetails;","import React, { Component } from 'react';\n\nimport './person-details.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport ErrorButton from \"../error-button\";\nimport ErrorIndicator from \"../error-indicator\";\n\nexport default class PersonDetails extends Component {\n\n    swapiService = new SwapiService();\n\n    state = {\n        person: null,\n        loading: false,\n        hasError: false\n    };\n\n    componentDidMount() {\n        this.updatePerson();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.personId !== prevProps.personId) {\n            this.updatePerson();\n        }\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('componentDidCatch()');\n        this.setState({\n            hasError: true\n        });\n    }\n\n    updatePerson() {\n        const { personId } = this.props;\n        if (!personId) {\n            return;\n        }\n\n        this.swapiService\n            .getPerson(personId)\n            .then((person) => {\n                this.setState({\n                    person\n                });\n            });\n    }\n\n    render() {\n\n        if (!this.state.person) {\n            return <p className=\"mt-3\">Select a person from a list</p>;\n        }\n\n        if (this.state.hasError) {\n            return <ErrorIndicator/>;\n        }\n\n        const { id, name, gender,\n                birthYear, eyeColor } = this.state.person;\n\n        return (\n            <nav className=\"person-details ml-lg-3 mt-3 w-100\">\n                <div className=\"card\">\n                    <div className=\"d-flex\">\n                        <div>\n                            <img className=\"card-img m-3 rounded-lg\"\n                                 alt=\"Person from Star Wars\"\n                                 src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}/>\n                        </div>\n                        <div className=\"d-flex align-items-center\">\n                            <div>\n                                <h3>{name}</h3>\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">\n                                        <span className=\"mr-2\">Gender:</span>\n                                        <span>{gender}</span>\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        <span className=\"mr-2\">Birth Year:</span>\n                                        <span>{birthYear}</span>\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        <span className=\"mr-2\">Eye Color:</span>\n                                        <span>{eyeColor}</span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-center mb-4\">\n                        <ErrorButton/>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n};","import PlanetDetails from './planet-details';\n\nexport default PlanetDetails;","import React, { Component } from 'react';\n\nimport './planet-details.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport ErrorButton from \"../error-button\";\nimport ErrorIndicator from \"../error-indicator\";\n\nexport default class PlanetDetails extends Component {\n\n    swapiService = new SwapiService();\n\n    state = {\n        planet: null,\n        loading: false,\n        hasError: false\n    };\n\n    componentDidMount() {\n        this.updatePlanet();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.planetId !== prevProps.planetId) {\n            this.updatePlanet();\n        }\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('componentDidCatch()');\n        this.setState({\n            hasError: true\n        });\n    }\n\n    updatePlanet() {\n        const { planetId } = this.props;\n        if (!planetId) {\n            return;\n        }\n\n        this.swapiService\n            .getPlanet(planetId)\n            .then((planet) => {\n                this.setState({\n                    planet\n                });\n            });\n    }\n\n    render() {\n\n        if (!this.state.planet) {\n            return <p className=\"mt-3\">Select a planet from a list</p>;\n        }\n\n        if (this.state.hasError) {\n            return <ErrorIndicator/>;\n        }\n\n        const { id, name, population,\n            rotationPeriod, diameter } = this.state.planet;\n\n        return (\n            <nav className=\"planet-details ml-lg-3 mt-3 w-100\">\n                <div className=\"card\">\n                    <div className=\"d-flex\">\n                        <div>\n                            <img className=\"card-img m-3 rounded-lg\"\n                                 alt=\"Planet from Star Wars\"\n                                 src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>\n                        </div>\n                        <div className=\"d-flex align-items-center\">\n                            <div>\n                                <h3>{name}</h3>\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">\n                                        <span className=\"mr-2\">Population:</span>\n                                        <span>{population}</span>\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        <span className=\"mr-2\">Rotation Period:</span>\n                                        <span>{rotationPeriod}</span>\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        <span className=\"mr-2\">Diameter:</span>\n                                        <span>{diameter}</span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-center mb-4\">\n                        <ErrorButton/>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n};","import App from './app';\n\nexport default App;","import React, { Component } from 'react';\n\nimport '../../services/swapi-service';\n\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport ItemList from '../item-list';\nimport ItemListPlanet from '../item-list-planet';\nimport PersonDetails from '../person-details';\nimport PlanetDetails from '../planet-details';\nimport ErrorIndicator from \"../error-indicator\";\n\nexport default class App extends Component {\n\n    state = {\n        selectedPerson: 5,\n        selectedPlanet: 5,\n        hasError: false\n    };\n\n    onPersonSelected = (id) => {\n        this.setState({\n            selectedPerson: id\n        });\n    };\n\n    onPlanetSelected = (id) => {\n        this.setState({\n            selectedPlanet: id\n        });\n    };\n\n    componentDidCatch(error, errorInfo) {\n        console.log('componentDidCatch()');\n        this.setState({\n            hasError: true\n        });\n    }\n\n    render() {\n\n        if (this.state.hasError) {\n            return <ErrorIndicator/>;\n        }\n\n        return (\n            <div className=\"container\">\n                <Header/>\n\n                <h2 className=\"mt-3\">Random Planet</h2>\n                <RandomPlanet/>\n\n                <h2 className=\"mt-3\">Select a Person</h2>\n                <div className=\"d-lg-flex mb-3\">\n                    <ItemList onItemSelected={this.onPersonSelected}/>\n                    <PersonDetails personId={this.state.selectedPerson}/>\n                </div>\n\n                <h2 className=\"mt-3\">Select a Planet</h2>\n                <div className=\"d-lg-flex mb-3\">\n                    <ItemListPlanet onItemSelected={this.onPlanetSelected}/>\n                    <PlanetDetails planetId={this.state.selectedPlanet}/>\n                </div>\n            </div>\n        );\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap';\n\nimport App from '../src/components/app';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}